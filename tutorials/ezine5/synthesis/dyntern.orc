;---------------------------------------------------------; Terrain Mapping with Dynamical Modulation; Coded by Hans Mikelson October 1998;---------------------------------------------------------sr      =        44100                      ; Sample ratekr      =        4410                       ; Kontrol rateksmps   =        10                         ; Samples/Kontrol periodnchnls  =        2                          ; Normal stereo;---------------------------------------------------------; Terrain modulated by Planet system;---------------------------------------------------------        instr    10idur    =        p3            ; Durationiamp    =        p4*.05        ; Amplitudeifqc    =        cpspch(p5)    ; Frequencyipanl   =        sqrt(p6)      ; Pan leftipanr   =        sqrt(1-p6)    ; Pan rightimass1  =        p7            ; Mass 1imass2  =        p8            ; Mass 2kamp    linseg   0, .02, 1, idur-.04, 1, .02, 0;                    Mass1   Mass2   Sep  X  Y   Z   VX  VY  VZ   h      Frictionaxp, ayp, azp planet imass1, imass2, 2.2, 2, .1, .1, .5, .6, -.1, .0002, .01ascal  =     100 + .1*(ayp + axp +azp)arosl  oscil 4, 3.01*ifqc, 1        ; Rose Curveaxl    oscil arosl, ifqc, 1, .10    ; Convert from polar toayl    oscil arosl, ifqc, 1, .35    ; rectangular coordinatesahill  =     1/(10+(axl-axp*.1)*(axl-axp*.1)+(ayl-ayp*.1)*(ayl-ayp*.1)) ; Create a moving hillazl    =     ascal*cos((1+azp*.1)*(axl+1)*(ayl+1)*.7)*ahill             ; Compute a bumpy 3D surfacearosr  oscil 4, 2.99*ifqc, 1, .2    ; Rose Curve rotated slightlyaxr    oscil arosr, ifqc, 1, .10    ; Convert from polar toayr    oscil arosr, ifqc, 1, .35    ; rectangular coordinatesahilr  =     1/(10+(axr-axp*.1)*(axr-axp*.1)+(ayr-ayp*.1)*(ayr-ayp*.1)) ; Create a moving hillazr    =     ascal*cos((1+azp*.1)*(axr+1)*(ayr+1)*.7)*ahilr             ; Compute a bumpy 3D surfaceaoutl  butterhp azl, 10             ; Block DCaoutr  butterhp azr, 10             ; Block DC       outs     aoutl*iamp*kamp*ipanl, aoutr*iamp*kamp*ipanr       endin;---------------------------------------------------------; Terrain modulated by Lorenz system;---------------------------------------------------------        instr    11idur    =        p3            ; Durationiamp    =        p4*.5         ; Amplitudeifqc    =        cpspch(p5)    ; Frequencyipanl   =        sqrt(p6)      ; Pan leftipanr   =        sqrt(1-p6)    ; Pan rightkamp    linseg   0, .02, 1, idur-.04, 1, .02, 0; Lorenz systemaxl, ayl, azl lorenz 10, 28, 8/3, .00001, 9.8, 17.6, 14.8, 1ax      oscil 4, ifqc, 1                  ; Convert from polar toay      oscil 4, ifqc, 1, .25             ; rectangular coordinatesascal   =     1+.02*(axl+ayl+azl)                  ; Overall scalingahv     =     4/(1+exp(ax-axl))-4/(1+exp(ay-ayl))  ; A moving hill and valleyazl     =     ascal*cos((1+.04*ayl)*ay*ay/(2+ax*ax*(1+.04*azl)))+ahv ; Compute a bumpy 3D surfaceazr     =     ascal*cos((1+.04*axl)*ay*ay/(2+ax*ax*(1+.04*azl)))-ahv ; Compute a bumpy 3D surfaceaoutl   butterhp azl, 10                  ; Block DCaoutr   butterhp azr, 10                  ; Block DCaoutl    =       aoutl*iamp*kamp*.6*ipanl ; Prepare to outputaoutr    =       aoutr*iamp*kamp*.6*ipanr ; Prepare to output        outs     aoutl, aoutr             ; Output        endin