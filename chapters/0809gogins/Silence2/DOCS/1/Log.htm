<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><html>	<head>		<meta http-equiv="Content-Type" content="text/html;CHARSET=iso-8859-1">		<meta name="GENERATOR" content="Visual Page 2.0 for Windows">		<title>untitled</title>	</head>	<body background="sandbg1.jpg" bgcolor="#FFFFCC">		<h1></h1>		<p>		<table border="0" cellpadding="8" cellspacing="16" width="100%">			<tr>				<td width="100%">					<h2>Development Log<a name="Development"></a></td>			</tr>			<tr>				<td width="100%">I changed the implementation of INotes from a one-column double[][] matrix to a double[] vector. I also added a MIDI status field at the beginning and x, y, and z spatial dimensions in place of pan. I did this so that in the future Silence can include complete expression and spatialization data without breaking its interfaces.<br>					<br>					The Java virtual machine has by nature a limited memory pool. The Symantec implementation appears to have some trouble automatically expanding its default size. I have been able to make at most 39,000 notes. This is sufficient for instrument-based music but not for granular synthesis in note space. Consequently I used the Csound phase vocoder structure for a time-frequency representation.<br>					<br>					I finished the TreeView for the music graph.<br>					<br>					I finally cracked the Csound phase vocoder format. It seems my private build of Csound had a broken phase vocoder; the code had probably been more or less working for a week! But artifacts in the sound and especially the apparent difficulty of logarithmic frequencies make me think it may be better to go with the adsyn unit.<br>					<br>					I added buffering to most of the file streams, causing drastic speedups of loading and saving.<br>					<br>					I implemented the Definition node by making only Use traverse Definition&#146;s children.<br>					<br>					I got the image into memory without displaying it by using MediaTracker.<br>					<br>					I created the TransformScale and TransformTranslate nodes.<br>					<br>					I will not do shear transforms at this time.<br>					<br>					I will not do a grid view of matrices at this time.<br>					<br>					I did read(DataInputStream input, boolean deepRead) and the corresponding write.<br>					<br>					I fixed the TransformPitchClasses node.<br>					<br>					I created the Lindenmayer node.<br>					<br>					Execution speed is now adequate.<br>					<br>					I redid rotations as rotations from dimension 1 to dimension 2, rather than rotations around one dimension.<br>					<br>					<i>25 November 1997</i>. I am now using Silence for music production.<br>					<br>					<i>8 December 1997</i>. I went back and redid the GUI using the model-view pattern, because I found myself leaving blank frames and dialogs hanging around, and because I decided that the button panels were not really a good substitute for regular old menus.<br>					<br>					<i>10 December 1997</i>. John ffitch says that he is following my suggestion to implement arbitrary partials for adsyn and hetero.<br>					<br>					<i>27 December 1997, Paris</i>. I made use of adsyn an option for GraphicsToMusic.<br>					<br>					<i>29 December 1997, Reillane</i>. I changed all names ending in &#147;Dialog&#148; or &#147;Frame&#148; to names ending in &#147;View&#148;.<br>					<br>					<i>31 December 1997, Reillane</i>. I created a global Csound orchestra that is set for all new MML objects. This design will have to be changed to allow for multiple instances of MML objects using different arrangements. At that time, the arrangement proper will have to be moved from the CsoundSynthesizer class into the ScoreManager class.<br>					<br>					<i>5 January 1998, Paris</i>. I fixed the nonpersistent ksmps bug.<br>					<br>					<i>9 January 1998, Manhattan</i>. I received Curtis Roads&#146; book Musical Signal Processing, and may use it as a sourcebook for implementing various DSP nodes for Silence.<br>					<br>					<i>10 January 1998, Manhattan</i>. I bought Lyon and Ray&#146;s book <b><i>Java Digital Signal Processing,</i></b> which should provide a number of ideas and possibly some usable classes.<br>					<br>					<i>10 January 1998, Manhattan</i>. Fixed test score persistence bug.<br>					<br>					<i>11 January 1998, Manhattan</i>. I have finished the StrangeAttractor node. I also downloaded the 3.47 build of Csound which has the Cook physical modeling instruments built in, though almost completely undocumented. MAXPTLS is still a bug. The View pattern is becoming too complex, and something needs to be done to simplify it before publishing Silence.<br>					<br>					<i>11 January 1998</i>. I created a Contour node that applies a function table to any selected dimension of a node, with scale relative to the scale of the dimension.<br>					<br>					<i>18 January 1998</i>. Fixed the bug causing Contour and TransformScale to paste as Group The former caused by no clone method, the latter by no default constructor. I don&#146;t think it is possible to make regular MML act like a Lindenmayer system. The code I was thinking of in Late Night VRML 2.0 with Java works the same way as my existing code.<br>					<br>					<i>21 January 1998</i>. Fixed a bug in GraphicsToMusic.TranslateToAdsyn. The bug was caused by omitting to write a short specifying the number of partials at the very beginning of the hetro file.<br>					<br>					<i>23 January 1998</i>. StrangeAttractor&#146;s name is no longer too persistent, and its Search button now works. ScoreManager saves its target scale and puts it into the NoteRescaleView dialog.<br>					<br>					<i>31 January 1998</i>. Fixed StrangeAttractor&#146;s Close menu item. Cleaned up some instrument definitions. Added to CsoundSynthesizerView a button for reloading the default orchestra library.<br>					<br>					<i>1 February 1998</i>. Created a MatrixEditor class, and implemented a TransformView class using it. MatrixEditor is a panel that can be added to dialogs and frame windows. Also put into one Csound instrument definition a proper constant-power panning function.<br>					<br>					<i>11 February 1998</i>. Created View classes for all INodes except RIFS and Soundfile. Fixed a number of minor bugs.<br>					<br>					<i>15 February 1998</i>. Added the option to rescale or not any dimension in ScoreManager and Rescale. Changed the logic of MMLParser to parse only token strings on the first pass, and added MMLParser.getDoubleElement() and MMLParser.getBooleanElement(). Created a ScoreManager.autoRescale property, so that all generative nodes inherit this property through their localScoreManager member. Removed all other autoRescale properties. Simplified ode.traverseChildNodes() code. Reviewed and updated comments in interface files. Caused the &#147;save as&#148; action to retitle the main frame window. Made clicking the right mouse button on a node invoke its openView() function. Made pressing the insert key insert a node even if focus is on the tree view. Made the tree view update node names properly. Implemented importing MML by inserting the root of the imported graph as a child of the currently selected node. Implemented exporting MML by taking the currently selected node as the one child of the root of the exported graph. Implemented external editing and restoration of Midifile nodes by waiting for the Midifile editor process to end and offering the option of immediately re-importing the Midi file.<br>					<br>					<i>18 February 1998</i>. I created a Repeat node, working optionally in either absolute or relative time.<br>					<br>					<i>19 February 1998</i>. I made the Rescale node and ScoreManager optionally rescale either only minima, or only ranges, or both, or none.<br>					<br>					<i>21 February 1998, Routes 6 and 17, Hamden</i>. I created a Progression node that fits octaves of child nodes into one or more pitch-class sets, each of which obtains at a specific absolute or relative time.<br>					<br>					<i>22 February 1998, Manhattan</i>. I reworked the base classes by adding INode.cloneChildNotes(), INode.writeChildNodes(), and INode.produceOrTransformNotes() as discussed below, except that INode.produceOrTransformNotes() is called by INode.traverseChildNodes(). I believe this is a sounder architecture that will enable derivation of new INode classes with less work and fewer errors.<br>					<br>					<i>24 February 1998</i>. I added a notesToProduce field to all of the random sequence generator nodes. I implemented about a third of the RIFS node. I fixed most of the bugs in the GraphicsToMusic node: arrangements no longer pile up, and the note is automatically generated.<br>					<br>					<i>25 February 1998</i>. I made MMLManager save the mml file just before every rendering. Made GraphicsToMusic arrangement number default correctly to 0, instead of 1; made graphics filename appear in text field; made it translate even if the view is not open. Added default constructor and defaults() to all random sequence generators, to resolve incorrect copying and pasting. I made the transposition values in the TransformPitchClasses and Progression nodes accept and display in units of semitones instead of units of octaves.<br>					<br>					<i>1 March 1998, Crescent Valley Road</i>. I made the Progression node optionally normalize times. I made the ScoreManager properly store auto rescale.<br>					<br>					<i>1 March 1998, Crescent Valley Road</i>. I fixed CsoundSynhesizer.clone() and SilenceSynthesizer.clone().<br>					<br>					<i>8 March 1998, Manhattan</i>. I have got the RIFS node mostly working. It translates to notes, and displays attractors. I emailed Lee who said post to the hackers so I did.<br>					<br>					<i>17 March 1998, Crescent Valley Road and Manhattan</i>. I added menus and score button to RIFS. I changed the Silence synthesizer to use a synchronous data flow architecture in which units are connected with wires and a depth-first traversal of wires builds up a topological sort of units for efficient ticking.<br>					<br>					<i>18 March 1998</i>. I made CsoundSynthesizer implement ISynthesizer, and I moved its event generation methods into IScoreManager. I also moved all abstract INode, IUnit, and IInstrument classes and interfaces into the Framework package. The rule will now be that only concrete INode, IUnit, and IInstrument classes will go into the Nodes, Units, and Instruments packages.<br>					<br>					<i>19 March 1998</i>. I recoded CsoundSynthesizer for IInstrument, and added arrangement interfaces to ISynthesizer. I also changed the relative times for Progression to delta times, not cumulative times. In fact, in all places where relative quantities are input, they should be normalized delta quantities.<br>					<br>					<i>20 March 1998</i>. I fixed a bug in the Progression node that caused relative times to be off by one bin. I created a JavaEditor dialog for writing and compiling IInstrument and IUnit classes from within Silence, making it into a complete if rudimentary development system.<br>					<br>					<i>21 March 1998</i>. I fixed the bug where Set Target Scale to Actual did not set ranges. I also fixed one cause of Transform and TransformTranslate each adding an extra note, or perhaps it is Use that does that, but there is still another cause. I created a batch file for generating javadoc documentation, and edited the source code throughout to work properly with that, and put in some links to the main pages.<br>					<br>					<i>22 March 1998</i>. I implemented the Contour node, which applies a multi-segmented envelope as a function from any one dimension of note space into any other dimension, with relative scale.<br>					<br>					<i>23 March 1998</i>. I made the Envelope unit use normalized delta times. I coded the SilenceSynthesizerView.<br>					<br>					<i>27-29 March 1998, Crescent Valley Road and Manhattan</i>. Completed the reworking of the Silence synthesizer up to the point of having a SimpleFM instrument. It is not quite working yet.<br>					<br>					<i>7 April 1998</i>. I fixed a bug in Rescale.read() causing an extra note to be created. I fixed a bug causing RIFSView to spin repainting. I created Web pages for the new Silence. I created a javadoc system for Silence.<br>					<br>					<i>8 April 1998</i>. I removed SilenceSynthesizer from Silence 3.1 to stop it from eating all my composition time. If the ICMC buys the paper and wants SilenceSynthesizer, I will restore it in the form of a more completely encapsulated ISynthesizer object. I redid the code and documentation to suit. I moved the development log onto these Web pages to provide a single source for documentation. Created a jar file.<br>					<br>					<i>9 April 1998</i>. I finally fixed the spin problem in RifsView by using a MemoryImageSource and drawing the image outside of the paint() function.<br>					<br>					<i>11 April 1998.</i> I added a PhaseVocoderAnalysis.normalize() function to get decent levels out of different kinds of images translated to phase vocoder analyses.<br>					<br>					<i>12 April 1998</i>. I put into all Csound instrument definitions the proper code for panning now that Csound has a sin function. I seem to have gotten both GraphicsToMusic.translateToAdsyn() and GraphicsToMusic.translateToPvoc() to work.<br>					<br>					<i>19 May 1998.</i> I fixed the problem with the StrangeAttractor radio buttons not persisting on update. I implemented a MathLink interface for the ExtendedCsoundX.dll ActiveX control, which reads the same .cnd files as Silence. A number of INode classes derived from Transform were not properly cloning the matrix member; I fixed them all.<br>					<br>					<i>20 May 1998</i>. Added time increment to all of the Randomize nodes.<br>					<br>					<i>6 May 1998, Crescent Valley Road</i>. Fixed Transform not cloning its children.<br>					<br>					<i>11 June 1998, Manhattan. </i>Added SoundFile note for heterodyne filter analysis. Renamed INode.traverseChildNodes() to INode.traverseMusicGraph(). Made comments and matrix operator names consistent.<br>					<br>					<i>12 June 1998, Manhattan. </i>Fixed Contour node so that it clones its breakpoints.<br>					<br>					<i>13 June 1998, Manhattan. </i>Fixed RIFSView button colors. Fixed RIFS.write() and RIFS.read(). I wrote the HeterodyneFilterAnalysis node. I found by experiments with 3-second recorded sounds of a glass lampshade struck with a wooden spoon to ring like a gong, and Heidi's metronome ticking, that hetro can resolve good detail even in &quot;noise&quot; sounds with sufficiently many partials and breakpoints, and that there are not, thank God, too many resulting notes for Silence to deal with. I wrote the Quantize node. What remains is the resynthesis instrument.<br>					<br>					<i>30 June 1998, Manhattan.</i> Finished ICMC paper, &quot;Music Graphs for Algorithmic Composition and Synthesis with an Extensible Implementation in Java&quot;. Created and tested HeterodyneFilterAnalysis node, with encouraging but not perfect results.<br>					<br>					<i>3 June 1998, Crescent Valley Road</i>. Finished IFS import for IFS node.<br>					<br>					<i>6 June 1998, Manhattan.</i> Completed changing from the Symantec tree and my own lousy MatrixEditor to the JFC JTree and using JTable in MatrixEditor. Started changing other GUI widgets to JFC, but encountered an apparent bug in JButton, so will stop at ScoreEditorView, a score editing spreadsheet. The RifsView.updateView() function now works properly when iterating; the Hutchinson and Markov operators no longer vanish from their panes.The matrix view now updates to show the current matrix when navigating through the Hutchinson operator.<br>					<br>					<i>10 July 1998, Crescent Valley Road</i>. Made NoteEditorView display notes sorted by time. Made the default X (pan) range in all places from 0.5 to 1.0, also Y and Z. Made the MIDI play and edit buttons save the MML file, so that the user never hears any music that has not been saved. Fixed some views so all background and button colors are uniform. Added insert and delete buttons to ScoreEditorView.<br>					<br>					<i>12 July 1998, Crescent Valley Road</i>. Made the file open and save dialogs remember the last visited directory. Made the file save dialog append the filename extension if it is not given. Fixed the bug in the MMLManagerView cut menu item causing the tree widget to get out of sync.<br>					<br>					<i>1 October 1998, Ann Arbor. </i>I have created an ActiveX control version of Csound, including making Csound itself re-entrant with Richard Dobson's code, and using Gabriel Maldonado's real-time version of Csound. I will continue to use and extend this build of Csound rather than creating a new software synthesizer; in future I may also encapsulate or adapt the best of the several other software synthesizers which are beginning to appear.<br>					<br>					<i>1 October 1998, Ann Arbor.</i> I have removed all Symantec classes from Silence. It now uses only core Java and Swing. I also changed Global to use interfaces, and made the choice of Csound synthesizer configurable, with my installation using AXCsound.<br>					<br>					<i>20 October 1998, Bovina and Manhattan.</i> I have fixed all the Swing layouts. I have created JCsound.Csound and JCsound.CsoundManager in Java. By default, Silence.Framework.CsoundSynthesizer now uses JCsound.Csound, which in turn uses a native DLL, JCSound_Csound.dll, that is based on Gabriel Maldonado's code. If JCsound is not present, CsoundSynthesizer still shells out to a configurable Csound. I also added a Csound HTML help pane to CsoundSynthesizerView.<br>					<br>					<i>25 October 1998, Manhattan</i>. I created AXCsoundAll.zip and Silence.zip containing all executables, samples, documentation, and source code for the Silence system. I changed JCsound.Csound to use the CsoundSynthesizer class from CsoundLib, so that it uses native Windows 95 threads, as this corrected a problem with losing the Java console stdout handle after the first run when using Java threads. However, this will make it slightly more difficult to port JCsound to other platforms. I changed the license for Silence to the GNU General Public License with a download fee for the Silence composition software if it is to be used to make music for public hearing. I updated all documentation and verified installation and executation after installation.<br>					<br>					<i>18 November 1998, Manhattan.</i> I simplified JCsound to use the ffitch sources, to not use an instrument library, and to use only 4 XML elements (Command, Orchestra, Score, and Midi). I moved Csound out of ScoreManager and into MMLManager. This simplifies the design of Silence. I added an InstrumentLibraryView based on JFrame that reads a configurable instrument directory with &quot;csd&quot; files in it, and allows the user to create, edit, and remove these files, as well as to append them to the CsoundManager member of MMLManager. This keeps the instrument library out of individual scores and removes the necessity for a test score pane, and should encourage exchange of csd files with useful patches. I will notify Hans Mikelson of this. I removed external Csound. I also added a GraphicsToMusic.translateToGrains() method which crashes because of its memory requirements, but it will work in future. I improved GraphicsToMusic.translateToNotes() by randomizing selection of raster when brightness is equal. And I simplified the code for GraphicsToMusic.translateToAdsyn(). When I produce an upload a finished version of this, it will be Silence 3.2.<br>					<br>					<i>2 December 1998, Manhattan.</i> I improved the menus in MMLManagerView and ScoreManagerView to be similar and to allow playing and editing of output from both views. I made MMLManagerOptionsView update MMLManagerView after changes.<br>					<br>					<i>11 December 1998, Manhattan. </i>I replaced all awt file dialogs with JFileChooser in Silence and JCsound. I downloaded an MPEG 3 encoder to play with. I tried the Java Media Framework, but at this time it is not usable. I will wait for Java Sound, which should be coming out soon. It is becoming clear that the optimal time/frequency representation for composing may or may not be the same as the optimal representation for signal processing. I will try wavelets because of the promised data reduction, but if Silence transforms don't allow pitch shifting or time stretching of wavelet coefficients without gross artifacts, something like Lemur is probably a better choice, only producing cosine-squared-overlapped grains instead of &quot;tracks&quot;.<br>					<br>					<i>12 December 1998, Manhattan. </i>Symantec Visual Cafe 3 is a useless dog for my purposes. It won't visually edit Swing with JDK 1.2. Therefore, I have reverted to Cafe 2.5a and will build only with JDK1.1 code, but run in JDK1.2. As soon as possible, I will move to a form builder that will work with JDK 1.2.<i><br>					<br>					13 December 1998, Manhattan. </i>I implemented the MidiFile node edit button. It is now possible to compose in music notation within Silence, although a bit awkward on a computer not thoroughly pumped up. I removed the &quot;render&quot; menu items and render only from the Csound window. I added an Expression node that uses a scientific calculator applet from David Wanqian Liu to evaluate and display a symbolic expression for Y as a function of X, Y, and Z over a range from Xmin to Xmax. This needs to be fixed to map X and Y to dimensions of music space, and to normalize, or not, the X range.<br>					<br>					<i>14 December 1998, Manhattan. </i>I finished the Expression node, except that it doesn't graph on update.<br>					<br>					<i>16 December 1998, Manhattan. </i>I got RIFSView to work. I created a music web page.<br>					<br>					<i>20 December 1998, Manhattan. </i>I moved all node documentation to Javadoc. I gave JCsound.CsoundManager a soundfilePlayer preference. I moved all my music to one linear directory. I made mp3s for many soundfiles. I plan to make mml or csd files for each piece, even if they only wrap earlier work.<br>					<br>					<i>21 January 1999, Manhattan. </i>I created a test score facility in MMLManagerView..<br>					<br>					<i>31 January 1999, Bovina. </i>I created a new MMLManagerView class with three tabbed panes: Model, Score (piano-roll display only), and Csound. I feel that this is a less cluttered and more pleasing design, and it drops features such as the score edit table and the overall rescaling dialog that were redundant or not really useful in the context of Music Modeling Language.<br>					<br>					<i>3 February 1999, Manhattan. </i>CsoundManager now sets its filename on Save As... and sets its parent window (if any) title. Experience with the new Dell Dimension XPS R450 is literally jaw-dropping. <b><i>Triptych</i></b>, which is not a thin or simple score, renders at ksmps=10 in real time, except where the first and second sections overlap. Silence is now adequately responsive. The GUI does not snap up instantaneously, but it is certainly far from annoying, and operations are no longer maddeningly slow.<br>					<br>					<i>4 February 1999, Manhattan. </i>Tested Java Sound on the XPS R450. Initially satisfactory, remains to be tested for long soundfiles. I added a &quot;Score&quot; menu to MMLManagerView to give the user the ability to delete a large score without having to go to the CsoundManager pane's score pane. I made the CsoundManager Command pane &quot;Play&quot; button stop the rendering thread automatically before opening the soundfile. I made the MMLManagerView window open at (100, 100).<br>					<br>					<i>7 February 1999, Manhattan. </i>I changed my XML format for Csound back to the original, now enshrined in public-domain Csound: CsoundSynthesizer, CsOptions, CsInstruments, CsScore, CsMidifile. Also patched all old mml and csd files back to this format. I bought and installed a CD writer to make the master for my first album. I have decided that command-line parsing to import Mathematica data is plenty to enable use of Mathematica.<br>					<br>					<i>9 February 1999, Manhattan. </i>I changed JCsound.CsoundManager to cumulatively import args as files, but with a -deleteNotes option, so that I can generate scores in Mathematica and get them into JCsound without MathLink.<br>					<br>					<i>17 February 1999, Manhattan. </i>I re-implemented both JCsound and AXCsound using Maldonado's latest sources. I simplified the changes that need to be made to use these sources. I implemented the -deleteNotes and -saveAs options in both AXCsoundExe and JCsound.CsoundManager. I updated the documentation and AXCsoundAll.zip.<br>					<br>					<i>18 February 1999, Manhattan. </i>I combined AXCsound.dll into JCsound_Csound.dll so that both the AXCsound.AXCsound ActiveX control and the JCsound Java package are implemented in the same dynamic link library.<br>					<br>					<i>1 March 1999, Manhattan. </i>I added IPlugin.write(IMMLWriter) and IPlugin.read(IMMLReader) to all INode classes. I will test these methods and then delete the older ones. I will also change the signatures to take lower level streams.<br>					<br>					<i>2 March 1999, Manhattan. </i>I tested IPlugin.write(IMMLWriter) and IPlugin.read(IMMLReader), converted all compositions, removed IPlugin.write(PrintWriter) and IPlugin.Read(BufferedReader), and regenerated all javadoc. I decided not to change the signatures of these functions because the type casts required by CsoundManager to read and write Csound XML do not affect any code inside INodes. I also repaired the menus in the standalone ScoreManagerView and removed synthesis related items from it. I am sure there are bugs and missing features; but I think that Silence can at last be called finished, as the basic concepts are proved by productive composition, and further work on the system should not invalidate existing data files.<br>					<br>					<i>7 March 1999, Bovina. </i>I completely reworked AXCsound. It now is a tabbed composite control instead of using property pages, you can paste into the edit fields, and it looks better. I removed the MathLink interface and the embedded media player in the interests of simplicity. I tested it from Silence and from Mathematica and from Visual Basic.<br>					<br>					<i>10 March 1999, Manhattan. </i>I uploaded AXCsound to my Web site. I reworked the JTree showing the music graph and improved the key and menu handling, and repainting.&nbsp;I also made the GraphicsToMusic node create an instrument only if one does not already exist, and always use existing notes.<br>					<br>					<i>13 March 1999, Manhattan</i>. Starting fixes for version 4.1.1. I re-enabled the MMLManagerView file menu options dialog. I fixed filename extensions throughout the program. I re-instated the main MMLManager.scoreManager.openView().</td>			</tr>			<tr>				<td width="100%">					<h3>Bugs</td>			</tr>			<tr>				<td width="100%">None at this time.</td>			</tr>		</table>	</body></html>