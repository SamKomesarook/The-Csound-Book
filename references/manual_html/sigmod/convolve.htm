<!doctype html public "-//W3C//DTD HTML 3.2//EN">
<!-- The HTML Edition of the Canonical Csound Manual maintained by David M. Boothe. Email: csound@lakewoodsound.com-->
<!--This is Version 4.16.-->
<html>
<head>
   <title>convolve</title>
	 <LINK REL="stylesheet" TYPE="text/css" HREF="../manual.css" TITLE="formal">
</head>
<body bgcolor="white">
<table  align="right" cellpadding="1" cellspacing="1" border="0">
	<tr>
		<td width="45" align="right">
			<a href="../manual2.htm#contents" target="_parent"><img src="../toc.gif" width="38" height="18" alt="Use Non-Frames Version" border="0"></a>
		</td>
		<td width="10"></td>
		<td width="45" align="right">
			<a href="vibrato.htm"><img src="../prev.gif" width="38" height="18" alt="Previous Page" border="0"></a>
		</td>
		<td width="45" align="right">
			<a href="cross2.htm"><img src="../next.gif" width="38" height="18" alt="Next Page" border="0"></a>
		</td>
	</tr>
</table>
<a class="toqr" href="../qr/sigmod.htm#convolution" class="toqr">
Signal Modifiers: Convolution and Morphing</a>

<hr size="1" color="#A9A9A9" noshade>

<h2>convolve</h2>

<pre>
  ar1[, ar2[, ar3[, ar4]]]  <strong>convolve</strong>   ain, ifilcod, ichannel
</pre>
<hr size="2" color="#A9A9A9" noshade>
<h3>Description</h3>
<p>Output is the convolution of signal <em>ain</em> and the impulse response contained in <em>ifilcod</em>. If more than one output signal is supplied, each will be convolved with the same impulse response. Note that it is considerably more efficient to use one instance of the operator when processing a mono input to create stereo, or quad, outputs. Note: this opcode can also be written <strong>convle</strong>.
</p>
<h3>Initialization</h3>
<p><em>ifilcod</em> &#8211; integer or character-string denoting an impulse response data file. An integer denotes the suffix of a file <em>convolve.m</em>; a character string (in double quotes) gives a filename, optionally a full pathname. If not a fullpath, the file is sought first in the current directory, then in the one given by the environment variable SADIR (if defined). The data file contains the Fourier transform of an impulse response. Memory usage depends on the size of the data file, which is read and held entirely in memory during computation, but which is shared by multiple calls.
</p>
<h3>Performance</h3>
<p><strong>convolve</strong> implements Fast Convolution. The output of this operator is delayed with respect to the input. The following formulas should be used to calculate the delay:
</p>
<pre>
  For (1/kr) &lt;= IRdur:
          Delay = ceil(IRdur * kr) / kr
  For (1/kr)  IRdur: 
          Delay = IRdur * ceil(1/(kr*IRdur))
  Where:
          kr  = Csound control rate
          IRdur = duration, in seconds, of impulse response
          ceil(n) = smallest integer not smaller than n
</pre>
<p>One should be careful to also take into account the initial delay, if any, of the impulse response. For example, if an impulse response is created from a recording, the soundfile may not have the initial delay included. Thus, one should either ensure that the soundfile has the correct amount of zero padding at the start, or, preferably, compensate for this delay in the orchestra. (the latter method is more efficient). To compensate for the delay in the orchestra, subtract the initial delay from the result calculated using the above formula(s), when calculating the required delay to introduce into the 'dry' audio path.
</p>
<p>For typical applications, such as reverb, the delay will be in the order of 0.5 to 1.5 seconds, or even longer. This renders the current implementation unsuitable for real time applications. It could conceivably be used for real time filtering however, if the number of taps is small enough.
</p>
<p>The author intends to create a higher-level operator at some stage, that would mix the wet &amp; dry signals, using the correct amount of delay automatically.
</p>
<h3>Example</h3>
<p>- Create frequency domain impulse response file:
</p>
<pre>
  c:\ CSound -Ucvanal l1_44.wav l1_44.cv
</pre>
<p>- Determine duration of impulse response. For high accuracy, determine the number of sample frames in the impulse response soundfile, and then compute the duration with:
</p>
<pre>
  duration = (sample frames)/(sample rate of soundfile)
</pre>
<p>This is due to the fact that the SNDINFO utility only reports the duration to the nearest 10ms. If you have a utility that reports the duration to the required accuracy, then you can simply use the reported value directly.
</p>
<pre>
  c:\ sndinfo l1_44.wav 
  length = 60822 samples, sample rate = 44100
 
  Duration = 60822/44100 = 1.379s.
</pre>
<p>- Determine initial delay, if any, of impulse response. If the impulse response has not had the initial delay removed, then you can skip this step. If it has been removed, then the only way you will know the initial delay is if the information has been provided separately. For this example, let's assume that the initial delay is 60ms. (0.06s)
</p>
<p>- Determine the required delay to apply to the dry signal, to align it with the convolved signal:
</p>
<pre> 
  If kr = 441:
        1/kr = 0.0023, which is &lt;= IRdur (1.379s), so:
        Delay1  = ceil(IRdur * kr) / kr
                = ceil(608.14) / 441
                = 609/441
                = 1.38s
        
  Accounting for the initial delay:
        Delay2  = 0.06s
  Total delay   = delay1 - delay2
                = 1.38 - 0.06
                = 1.32s

- Create .orc file, e.g.: 
 ; Simple demonstration of CONVOLVE operator, to apply reverb.
        sr = 44100
        kr = 441
        ksmps = 100
        nchnls = 2
        instr   1
imix = 0.22 ; Wet/dry mix. Vary as desired.
            ; NB: 'Small' reverbs often require a much higher
            ; percentage of wet signal to sound interesting. 'Large'
            ; reverbs seem require less. Experiment! The wet/dry mix is
            ; very important - a small change can make a large difference. 
ivol = 0.9  ; Overall volume level of reverb. May need to adjust 
            ; when wet/dry mix is changed, to avoid clipping.
idel = 1.32 ; Required delay to align dry audio with output of convolve.
            ; This can be automatically calculated within the orc file, 
            ; if desired.
adry            <strong>soundin</strong> &quot;anechoic.wav&quot;      ; input (dry) audio
awet1,awet2     <strong>convolve</strong> adry,&quot;l1_44.cv&quot;    ; stereo convolved (wet) audio
adrydel         <strong>delay</strong>   (1-imix)*adry,idel  ; Delay dry signal, to align it with 
                                          ; convolved signal. Apply level 
                                          ; adjustment here too.
                <strong>outs</strong>    ivol*(adrydel+imix*awet1),ivol*(adrydel+imix*awet2) 
                                          ; Mix wet &amp; dry signals, and output
        endin
</pre>


<h3>Author</h3>
<p>Greg Sullivan<br>
1996
</p>
<hr size="2" color="#A9A9A9" noshade>
<table  align="right" cellpadding="1" cellspacing="1" border="0">
	<tr>
		<td width="45" align="right">
			<a href="../manual2.htm#contents" target="_parent"><img src="../toc.gif" width="38" height="18" alt="Use Non-Frames Version" border="0"></a>
		</td>
		<td width="10"></td>
		<td width="45" align="right">
			<a href="vibrato.htm"><img src="../prev.gif" width="38" height="18" alt="Previous Page" border="0"></a>
		</td>
		<td width="45" align="right">
			<a href="cross2.htm"><img src="../next.gif" width="38" height="18" alt="Next Page" border="0"></a>
		</td>
	</tr>
</table>
<a class="toqr" href="../qr/sigmod.htm#convolution" class="toqr">
Signal Modifiers: Convolution and Morphing</font></a>
</body>

</html>
